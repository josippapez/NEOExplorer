{"version":3,"sources":["components/layout/navbar.js","components/cards/cardSummary.js","components/cards/cardList.js","store/actions/apiActions.js","components/dashboard/dashboard.js","App.js","serviceWorker.js","store/reducers/rootReducer.js","index.js"],"names":["Navbar","className","CardSummary","nearEarthObject","style","width","height","name","Number","estimated_diameter","meters","estimated_diameter_min","toFixed","estimated_diameter_max","is_potentially_hazardous_asteroid","close_approach_data","length","orbiting_body","relative_velocity","kilometers_per_hour","miss_distance","kilometers","astronomical","orbital_data","first_observation_date","last_observation_date","orbit_determination_date","orbit_class","orbit_class_type","orbit_class_description","CardList","merged","map","object","key","id","apiKey","start_date","end_date","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","fetchNearEarthObjectsForThisWeek","sorting","dispatch","getState","day","getDay","diff","setDate","getMonday","Axios","get","then","res","fetchNearEarthObjectsSorted","_","flatMap","data","near_earth_objects","catch","err","type","orderBy","el","Dashboard","state","mergedandSorted","flag","handleClickToday","setState","componentWillMount","handleClickThisWeek","props","fetchNEOforThisWeek","handleSortByDiameter","fetchNEOSorted","handleSortByDistance","handleSortByVelocity","this","fetchNEOforToday","onClick","disabled","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Component","connect","fetchNearEarthObjectsForToday","App","Boolean","window","location","hostname","match","initState","rootReducer","action","console","log","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83257032.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n            <div className=\"container\">\r\n                <label className='navbar-brand center'>NEO Explorer</label>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\n\r\nfunction CardSummary({nearEarthObject}) {\r\n    return (\r\n        <div className=\"card shadow-lg mb-3\" style={{'backgroundColor': '#1f0033'}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <canvas className=\"top-buffer\" width=\"200px\" height=\"200px\"/>\r\n                    <h5 className=\"text-white card-title\">{nearEarthObject.name}</h5>\r\n                </div>\r\n                <div className=\"card-body col-md-8 bg-light p-5\">\r\n\r\n                    <p className=\"font-weight-bold\">ESTIMATED DIAMETER</p>\r\n                    <div className=\"row neo-data\">\r\n                        <div className=\"col-md-6\">\r\n                            <p>ESTIMATED DIAMETER (min):</p>\r\n                            <p>ESTIMATED DIAMETER (max):</p>\r\n                            <p>ESTIMATED DIAMETER (mean):</p>\r\n                            <p>IS IT POTENTIALLY HAZARDOUS:</p>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <p>{Number(nearEarthObject.estimated_diameter.meters.estimated_diameter_min).toFixed(2)} m</p>\r\n                            <p>{Number(nearEarthObject.estimated_diameter.meters.estimated_diameter_max).toFixed(2)} m</p>\r\n                            <p>{Number((nearEarthObject.estimated_diameter.meters.estimated_diameter_max + \r\n                                nearEarthObject.estimated_diameter.meters.estimated_diameter_min)/(2)).toFixed(2)} m</p>\r\n                            <p>{(nearEarthObject.is_potentially_hazardous_asteroid) ? (\"YES\") : (\"NO\")}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {(nearEarthObject.close_approach_data.length>0 ? (\r\n                    <div>\r\n                        <p className=\"font-weight-bold\">CLOSE APPROACH DATA</p>\r\n                        <div className=\"row neo-data\">\r\n                            <div className=\"col-md-6\">\r\n                                <p>ORBITING BODY:</p>\r\n                                <p>RELATIVE VELOCITY:</p>\r\n                                <p>MISS DISTANCE:</p>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <p>{nearEarthObject.close_approach_data[nearEarthObject.close_approach_data.length-1].orbiting_body}</p>\r\n                                <p>{Number(nearEarthObject.close_approach_data[nearEarthObject.close_approach_data.length-1].relative_velocity.kilometers_per_hour).toFixed(2)} km/h</p>\r\n                                <p>{(nearEarthObject.close_approach_data[nearEarthObject.close_approach_data.length-1].miss_distance.kilometers.length>5) ?\r\n                                (Number((nearEarthObject.close_approach_data[nearEarthObject.close_approach_data.length-1].miss_distance.astronomical)*499.004784).toFixed(3) + \" ls\")\r\n                                :\r\n                                (Number(nearEarthObject.close_approach_data[nearEarthObject.close_approach_data.length-1].miss_distance.kilometers).toFixed(0)) + \" km\"}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    ):(\"\"))}\r\n                    <p className=\"font-weight-bold\">ORBITAL DATA</p>\r\n                    <div className=\"row neo-data\">\r\n                        <div className=\"col-md-6\">\r\n                            <p>FIRST OBSERVATION DATE:</p>\r\n                            <p>LAST OBSERVATION DATE:</p>\r\n                            <p>ORBIT DETERMINATION DATE:</p>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <p>{nearEarthObject.orbital_data.first_observation_date}</p>\r\n                            <p>{nearEarthObject.orbital_data.last_observation_date}</p>\r\n                            <p>{nearEarthObject.orbital_data.orbit_determination_date}</p>\r\n                        </div>\r\n                    </div>\r\n                    {(nearEarthObject.orbital_data.orbit_class!=null ? (\r\n                    <div className=\"row neo-data\">\r\n                        <div className=\"col-md-6\">\r\n                            <p>ORBIT CLASS TYPE:</p>\r\n                            <p>ORBIT CLASS DESCRIPTION:</p>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <p>{nearEarthObject.orbital_data.orbit_class.orbit_class_type}</p>\r\n                            <p>{nearEarthObject.orbital_data.orbit_class.orbit_class_description}</p>\r\n                        </div>\r\n                    </div>\r\n                    ) :(\"\"))}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardSummary;\r\n","import React from 'react'\r\nimport CardSummary from './cardSummary'\r\n\r\nfunction CardList({merged}) {\r\n    return (\r\n        <div className=\"row m-5 p-0\">\r\n            <div className=\"col\">\r\n                {merged && merged.map(object=>{\r\n                    return(\r\n                        <div key={object.id}>\r\n                            <CardSummary nearEarthObject={object}/>\r\n                        </div>\r\n                    )\r\n                })} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import Axios from \"axios\"\r\nimport _ from \"lodash\"\r\n\r\nvar apiKey=\"QnCEMFdmeYQRH588hNRQVYtjQeJlKgsvs8XXIN5B\";\r\nvar start_date=\"\"\r\nvar end_date=\"\"\r\nvar date = new Date();\r\nvar dd = String(date.getDate()).padStart(2, '0');\r\nvar mm = String(date.getMonth() + 1).padStart(2, '0');\r\nvar yyyy = date.getFullYear();\r\ndate = yyyy+\"-\"+mm+\"-\"+dd;\r\n\r\nexport const fetchNearEarthObjectsForToday=(sorting)=>{\r\n    return(dispatch,getState)=>{\r\n        start_date=date;\r\n        end_date=date;\r\n        Axios.get(`https://api.nasa.gov/neo/rest/v1/feed/?start_date=${start_date}&end_date=${end_date}&detailed=true&api_key=${apiKey}`)\r\n        .then(res => dispatch(fetchNearEarthObjectsSorted(sorting,res= _.flatMap(res.data.near_earth_objects)))\r\n        )\r\n        .catch((err)=>{\r\n            dispatch({type:'FETCH_NEO_ERROR',err})\r\n        })\r\n    }\r\n}\r\nfunction getMonday(date) {\r\n    date = new Date(date);\r\n    var day = date.getDay(),\r\n        diff = date.getDate() - day + (day === 0 ? -6:1);\r\n    return new Date(date.setDate(diff));\r\n  }\r\n\r\nexport const fetchNearEarthObjectsForThisWeek=(sorting)=>{\r\n    return(dispatch,getState)=>{\r\n        end_date=date;\r\n        start_date=getMonday(end_date);\r\n        var dd = String(start_date.getDate()).padStart(2, '0');\r\n        var mm = String(start_date.getMonth() + 1).padStart(2, '0');\r\n        var yyyy = start_date.getFullYear();\r\n        start_date = yyyy+\"-\"+mm+\"-\"+dd;\r\n        \r\n        Axios.get(`https://api.nasa.gov/neo/rest/v1/feed/?start_date=${start_date}&end_date=${end_date}&detailed=true&api_key=${apiKey}`)\r\n        .then(res => dispatch(fetchNearEarthObjectsSorted(sorting,res= _.flatMap(res.data.near_earth_objects)))\r\n        )\r\n        .catch((err)=>{\r\n            dispatch({type:'FETCH_NEO_THIS_WEEK_ERROR',err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchNearEarthObjectsSorted=(sorting,merged)=>{\r\n    return(dispatch,getState)=>{\r\n        if(sorting===\"ESTIMATED DIAMETER (mean)\"){\r\n            merged = _.orderBy(merged, function (el) {\r\n                return (((el.estimated_diameter.meters.estimated_diameter_max+el.estimated_diameter.meters.estimated_diameter_min)/2));\r\n              },['desc']);\r\n        }\r\n        else if(sorting === \"MISS DISTANCE\"){\r\n            merged = _.orderBy(merged, function (el) {\r\n                return (el.close_approach_data[el.close_approach_data.length-1].miss_distance.astronomical)\r\n         },['desc']);\r\n        }\r\n        else{\r\n            merged = _.orderBy(merged, function (el) {\r\n                return (el.close_approach_data[el.close_approach_data.length-1].relative_velocity.kilometers_per_hour)\r\n         },['desc']);\r\n        }\r\n        dispatch({type:'FETCH_NEO_SORTED', data:merged});\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport CardList from '../cards/cardList'\r\nimport { connect } from 'react-redux';\r\nimport { fetchNearEarthObjectsForToday, fetchNearEarthObjectsForThisWeek, fetchNearEarthObjectsSorted } from '../../store/actions/apiActions';\r\n\r\nclass Dashboard extends Component {\r\n    state={\r\n        mergedandSorted:[],\r\n        flag:true,\r\n        sorting:\"ESTIMATED DIAMETER (mean)\"\r\n    }\r\n    componentWillMount(){\r\n        this.props.fetchNEOforToday(this.state.sorting);\r\n    }\r\n    handleClickToday=()=>{\r\n        this.setState({\r\n            flag:true\r\n        },()=>{this.componentWillMount();})\r\n    }\r\n    handleClickThisWeek=()=>{\r\n        this.setState({\r\n            flag:false\r\n        },()=>{this.props.fetchNEOforThisWeek(this.state.sorting);})\r\n    }\r\n    handleSortByDiameter=(merged)=>{\r\n        this.setState({\r\n            sorting:\"ESTIMATED DIAMETER (mean)\"\r\n        }, ()=>{this.props.fetchNEOSorted(this.state.sorting,merged)})\r\n    }\r\n    handleSortByDistance=(merged)=>{\r\n        this.setState({\r\n            sorting:\"MISS DISTANCE\"\r\n        }, ()=>{this.props.fetchNEOSorted(this.state.sorting,merged)})\r\n    }\r\n    handleSortByVelocity=(merged)=>{\r\n        this.setState({\r\n            sorting:\"RELATIVE VELOCITY\"\r\n        }, ()=>{this.props.fetchNEOSorted(this.state.sorting,merged)})\r\n    }\r\n    render(){\r\n        var merged = this.props.data;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"selectors top-buffer\">\r\n                    <button type=\"button\" className=\"btn btn-light mx-2\" onClick={this.handleClickToday} disabled={this.state.flag}>Today</button>\r\n                    <button type=\"button\" className=\"btn btn-light\" onClick={this.handleClickThisWeek} disabled={!this.state.flag}>This Week</button>\r\n                    <div className=\"text-white float-right\">SORT BY:\r\n                        <button className=\"btn btn-secondary dropdown-toggle ml-3\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            {this.state.sorting}\r\n                        </button>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                            <button className=\"dropdown-item\" onClick={()=>{this.handleSortByDiameter(merged)}}>ESTIMATED DIAMETER (mean)</button>\r\n                            <button className=\"dropdown-item\" onClick={()=>{this.handleSortByDistance(merged)}}>MISS DISTANCE</button>\r\n                            <button className=\"dropdown-item\" onClick={()=>{this.handleSortByVelocity(merged)}}>RELATIVE VELOCITY</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {merged && <CardList merged={merged}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data\r\n    };\r\n};\r\n  \r\nconst mapStateToDispatch = (dispatch) => {\r\n    return {\r\n        fetchNEOforToday: (sorting) => dispatch(fetchNearEarthObjectsForToday(sorting)),\r\n        fetchNEOforThisWeek: (sorting) => dispatch(fetchNearEarthObjectsForThisWeek(sorting)),\r\n        fetchNEOSorted: (sorting,merged) => dispatch(fetchNearEarthObjectsSorted(sorting,merged))\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapStateToDispatch)(Dashboard);\r\n","import React from 'react';\r\nimport Navbar from './components/layout/navbar';\r\nimport Dashboard from './components/dashboard/dashboard';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar/>\r\n      <Dashboard/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState={\r\n    data:[]\r\n}\r\n\r\nconst rootReducer=(state=initState,action)=>{\r\n    switch (action.type) {\r\n        case 'FETCH_NEO_SORTED':\r\n            console.log(\"Fetched sorted data: \",action.data );\r\n            return {...state, data:action.data}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './store/reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}